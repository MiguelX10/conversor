import { useState } from 'react'\nimport { Upload, CloudLightning, Heart, Bug, Download, AlertCircle, CheckCircle } from 'lucide-react'\nimport { useDropzone } from 'react-dropzone'\nimport { TestConversionService, type TestProvider, type TestConversionOptions } from '../services/testConversionService'\nimport { saveAs } from 'file-saver'\n\nexport function TestConversionPanel() {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null)\n  const [selectedProvider, setSelectedProvider] = useState<TestProvider>('cloudconvert')\n  const [isConverting, setIsConverting] = useState(false)\n  const [conversionLog, setConversionLog] = useState<string[]>([])\n  const [result, setResult] = useState<{ blob: Blob, filename: string } | null>(null)\n  const [error, setError] = useState<string | null>(null)\n\n  const testService = new TestConversionService()\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept: {\n      'application/pdf': ['.pdf']\n    },\n    maxFiles: 1,\n    onDrop: (acceptedFiles) => {\n      if (acceptedFiles.length > 0) {\n        setSelectedFile(acceptedFiles[0])\n        setError(null)\n        setResult(null)\n        setConversionLog([])\n      }\n    }\n  })\n\n  const addLog = (message: string) => {\n    setConversionLog(prev => [...prev, `${new Date().toLocaleTimeString()}: ${message}`])\n    console.log(message)\n  }\n\n  const handleTestConversion = async () => {\n    if (!selectedFile) return\n\n    setIsConverting(true)\n    setError(null)\n    setResult(null)\n    setConversionLog([])\n\n    // Interceptar console.log para mostrar en la UI\n    const originalLog = console.log\n    console.log = (...args) => {\n      addLog(args.join(' '))\n      originalLog(...args)\n    }\n\n    try {\n      addLog(`üß™ Iniciando prueba con ${selectedProvider}`)\n      addLog(`üìÑ Archivo: ${selectedFile.name} (${(selectedFile.size / 1024 / 1024).toFixed(2)} MB)`)\n\n      const options: TestConversionOptions = {\n        provider: selectedProvider,\n        enableDiagnostics: true\n      }\n\n      const result = await testService.convertPDFToWord(\n        selectedFile,\n        options,\n        (progress) => {\n          addLog(`üìä ${progress.message} (${progress.progress}%)`)\n        }\n      )\n\n      addLog('‚úÖ Conversi√≥n completada exitosamente')\n      setResult({ blob: result.blob, filename: result.filename })\n\n    } catch (err: any) {\n      const errorMessage = err.message || 'Error desconocido'\n      addLog(`‚ùå Error: ${errorMessage}`)\n      setError(errorMessage)\n    } finally {\n      setIsConverting(false)\n      // Restaurar console.log\n      console.log = originalLog\n    }\n  }\n\n  const handleDownload = () => {\n    if (result) {\n      saveAs(result.blob, result.filename)\n      addLog(`‚¨áÔ∏è Descargando ${result.filename}`)\n    }\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-lg\">\n      <div className=\"mb-6\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-2 flex items-center gap-2\">\n          <Bug className=\"text-red-500\" />\n          Panel de Pruebas de Conversi√≥n\n        </h2>\n        <p className=\"text-gray-600\">\n          Prueba cada API de conversi√≥n por separado para diagnosticar problemas\n        </p>\n      </div>\n\n      {/* Selector de Proveedor */}\n      <div className=\"mb-6\">\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n          Selecciona el proveedor a probar:\n        </label>\n        <div className=\"flex gap-4\">\n          <button\n            onClick={() => setSelectedProvider('cloudconvert')}\n            className={`flex items-center gap-2 px-4 py-2 rounded-lg border transition-colors ${\n              selectedProvider === 'cloudconvert'\n                ? 'bg-blue-500 text-white border-blue-500'\n                : 'bg-white text-blue-500 border-blue-500 hover:bg-blue-50'\n            }`}\n          >\n            <CloudLightning size={16} />\n            CloudConvert\n          </button>\n          <button\n            onClick={() => setSelectedProvider('ilovepdf')}\n            className={`flex items-center gap-2 px-4 py-2 rounded-lg border transition-colors ${\n              selectedProvider === 'ilovepdf'\n                ? 'bg-pink-500 text-white border-pink-500'\n                : 'bg-white text-pink-500 border-pink-500 hover:bg-pink-50'\n            }`}\n          >\n            <Heart size={16} />\n            iLovePDF\n          </button>\n          <button\n            onClick={() => setSelectedProvider('auto')}\n            className={`flex items-center gap-2 px-4 py-2 rounded-lg border transition-colors ${\n              selectedProvider === 'auto'\n                ? 'bg-green-500 text-white border-green-500'\n                : 'bg-white text-green-500 border-green-500 hover:bg-green-50'\n            }`}\n          >\n            <Bug size={16} />\n            Probar Ambos\n          </button>\n        </div>\n      </div>\n\n      {/* Zona de Drop */}\n      <div\n        {...getRootProps()}\n        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors cursor-pointer ${\n          isDragActive\n            ? 'border-blue-400 bg-blue-50'\n            : selectedFile\n            ? 'border-green-400 bg-green-50'\n            : 'border-gray-300 hover:border-gray-400'\n        }`}\n      >\n        <input {...getInputProps()} />\n        <Upload className=\"mx-auto mb-4 text-gray-400\" size={48} />\n        {selectedFile ? (\n          <div>\n            <p className=\"text-green-600 font-medium\">Archivo seleccionado:</p>\n            <p className=\"text-gray-700\">{selectedFile.name}</p>\n            <p className=\"text-gray-500 text-sm\">\n              {(selectedFile.size / 1024 / 1024).toFixed(2)} MB\n            </p>\n          </div>\n        ) : (\n          <div>\n            <p className=\"text-gray-600 mb-2\">\n              Arrastra un archivo PDF aqu√≠ o haz click para seleccionar\n            </p>\n            <p className=\"text-gray-500 text-sm\">\n              Solo archivos PDF ‚Ä¢ M√°ximo 50MB\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Bot√≥n de Conversi√≥n */}\n      <div className=\"mt-6 flex gap-4\">\n        <button\n          onClick={handleTestConversion}\n          disabled={!selectedFile || isConverting}\n          className=\"flex-1 bg-blue-500 text-white px-6 py-3 rounded-lg font-medium hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center justify-center gap-2\"\n        >\n          {isConverting ? (\n            <>\n              <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white\" />\n              Convirtiendo...\n            </>\n          ) : (\n            <>\n              <Bug size={20} />\n              Probar Conversi√≥n con {selectedProvider}\n            </>\n          )}\n        </button>\n\n        {result && (\n          <button\n            onClick={handleDownload}\n            className=\"bg-green-500 text-white px-6 py-3 rounded-lg font-medium hover:bg-green-600 transition-colors flex items-center gap-2\"\n          >\n            <Download size={20} />\n            Descargar\n          </button>\n        )}\n      </div>\n\n      {/* Resultado */}\n      {error && (\n        <div className=\"mt-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <div className=\"flex items-start gap-2\">\n            <AlertCircle className=\"text-red-500 flex-shrink-0 mt-0.5\" size={20} />\n            <div>\n              <h4 className=\"font-medium text-red-800\">Error en la conversi√≥n</h4>\n              <p className=\"text-red-700 text-sm mt-1\">{error}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {result && (\n        <div className=\"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\n          <div className=\"flex items-start gap-2\">\n            <CheckCircle className=\"text-green-500 flex-shrink-0 mt-0.5\" size={20} />\n            <div>\n              <h4 className=\"font-medium text-green-800\">Conversi√≥n exitosa</h4>\n              <p className=\"text-green-700 text-sm mt-1\">\n                Archivo convertido: {result.filename} ({(result.blob.size / 1024).toFixed(2)} KB)\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Log de Conversi√≥n */}\n      {conversionLog.length > 0 && (\n        <div className=\"mt-6\">\n          <h3 className=\"font-medium text-gray-800 mb-2\">Log de Diagn√≥stico:</h3>\n          <div className=\"bg-gray-50 border rounded-lg p-4 max-h-96 overflow-y-auto\">\n            <pre className=\"text-xs text-gray-700 whitespace-pre-wrap font-mono\">\n              {conversionLog.join('\\n')}\n            </pre>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}